    const spotifyemoji = client.emojis.cache.get("846030610929418310");
    const scemoji = client.emojis.cache.get("865548940694519819");
    const playlisturl = "www.youtube.com/playlist?list=";
    const spotifyurl = "open.spotify.com/track/";
    const spotifyplaylisturl = "open.spotify.com/playlist/";
    const scurl = "soundcloud.com/";      
      
      if(args[0].includes(scurl)){
        message.channel.send(`${scemoji} **Searching on SoundCloud** \`${args.join(' ')}\``)

        scdlcore.connect(SOUNDCLOUD_CLIENT_ID).then(async () => {

            const scdlinfoget = await scdlcore.tracks.getTrack(args[0])

            if(scdlinfoget){
                if(scdlinfoget.kind === 'track'){
                    
                    const durationvideo = scdlinfoget.duration
                    
                    song = {
                        url: scdlinfoget.permalink_url,
                        title: scdlinfoget.title,
                        type: 'sc',
                        app: 'SoundCloud',
                        customurl: scdlinfoget.permalink_url,
                        addedby: message.author.username,
                        addedid: message.author.id,
                        duration: `${moment.duration(durationvideo).minutes()}:${moment.duration(durationvideo).seconds()}`
                    }
                await handleResource(song, message, args, voiceChannel, player, 'false')
                } else if(scdlinfoget.kind === 'playlist'){

                    const otherscdlhandler = await scdl.getSetInfo(args[0])
                    
                    otherscdlhandler.tracks.forEach(async track => {
                        
                        const durationvideo = track.duration

                        song = {
                            url: track.permalink_url,
                            title: track.title,
                            type: 'sc',
                            app: 'SoundCloud',
                            customurl: permalink_url,
                            addedby: message.author.username,
                            addedid: message.author.id,
                            duration: `${moment.duration(durationvideo).minutes()}:${moment.duration(durationvideo).seconds()}`
                        }
                        await handleResource(song, message, args, voiceChannel, player, 'soundcloudplaylist')
                    })

                    let playlistembed = new Discord.MessageEmbed()
                    .setAuthor(`SoundCloud playlist has been added to the queue with ${scdlinfoget.tracks.length} songs!`, `${message.author.displayAvatarURL({dynamic: true})}`)
                    return message.channel.send(playlistembed)
                }

            } else if(!scdlinfoget){
                let errorembed = new Discord.MessageEmbed()
                .setDescription(`${scemoji} Song or playlist isn't found on SoundCloud!`)
                return message.channel.send(errorembed)
            }
        })
      }
      else if(args[0].includes(spotifyurl)){
          message.channel.send(`${spotifyemoji} **Searching on Spotify** \`${args.join(' ')}\``)

          const spotify_finder = await getPreview(args[0])

          const search_title = `${spotify_finder.artist} ${spotify_finder.title}`


          const spoyt_finder = async (query) =>{
              const video_result = await ytSearch(query);
              return (video_result.videos.length > 1) ? video_result.videos[0] : null;
          }

          const spoytvid = await spoyt_finder(search_title);

          if(spoytvid) {
              song = {
                  url: spoytvid.url,
                  title: `${spotify_finder.artist} - ${spotify_finder.title}`,
                  type: 'normal',
                  app: 'Spotify',
                  customurl: args[0],
                  addedby: message.author.username,
                  addedid: message.author.id,
                  duration: spoytvid.duration.timestamp,
              }
          } else {
              let errorembed = new Discord.MessageEmbed()
              .setDescription(`${spotifyemoji} Song isn't found on Spotify!`)
              return message.channel.send(errorembed)
          }
          await handleResource(song, message, args, voiceChannel, player, 'false')
      }
      else if(args[0].includes(spotifyplaylisturl)){
          message.channel.send(`${spotifyemoji} **Searching playlist** \`${args.join(' ')}\``)
          
          const data = await getTracks(args[0])
          
          

          const spoyt_finder = async (query) =>{
              const video_result = await ytSearch(query);
              return (video_result.videos.length > 1) ? video_result.videos[0] : null;
          }

          let number = data.length

          data.forEach(async song => {

              const search_title = `${song.artists[0].name} - ${song.name}`

              const spotifyplaylist = await spoyt_finder(search_title);

              if(spotifyplaylist) {
                  song = {
                      url: spotifyplaylist.url,
                      title: search_title,
                      type: 'normal',
                      app: 'Spotify',
                      customurl: args[0],
                      addedby: message.author.username,
                      addedid: message.author.id,
                      duration: spotifyplaylist.duration.timestamp,
                  }
                  await handleResource(song, message, args, voiceChannel, player, 'spotifyplaylist')
              } else {
                  let errorembed = new Discord.MessageEmbed()
                  .setDescription(`${spotifyemoji} Playlist isn't found on Spotify!`)
                  message.channel.send(errorembed)
              }

          })
          let playlistembed = new Discord.MessageEmbed()
          .setAuthor(`Spotify playlist has been added to the queue with ${number} songs!`, `${message.author.displayAvatarURL({dynamic: true})}`)
          return message.channel.send(playlistembed)
      }
      else if(args[0].includes(playlisturl)){
          message.channel.send(`${ytemoji} **Searching playlist** \`${args.join(' ')}\``)

          const playlist = await youtube.getPlaylist(args[0]);
          const videos = await playlist.getVideos();
          
          for(const video of Object.values(videos)){
              const ytplaylist = await youtube.getVideoByID(video.id)

              let song = {
                  title: ytplaylist.title,
                  url: `https://www.youtube.com/watch?v=${ytplaylist.id}`,
                  type: 'normal',
                  app: 'YouTube',
                  customurl: `${args[0]}`,
                  addedby: message.author.username,
                  addedid: message.author.id,
                  duration: `${song.duration.minutes}:${song.durationSeconds}`,
              }

              await handleResource(song, message, args, voiceChannel, player, 'youtubeplaylist')
          }
          let playlistembed = new Discord.MessageEmbed()
          .setAuthor(`Youtube playlist has been added to the queue with ${playlist.videos.length} songs!`, `${message.author.displayAvatarURL({dynamic: true})}`)
          return message.channel.send(playlistembed)
      }